openapi: 3.0.0
info:
  title: JAI (Jyotish Astrological Interpretation) API
  description: API for Vedic astrology calculations providing planetary positions, ascendant, houses, and dasha periods based on birth details
  version: 1.0.0
servers:
  - url: https://your-api-endpoint.com
    description: JAI API Server
paths:
  /v1/api/horoscope:
    post:
      operationId: generateHoroscope
      summary: Generate a Vedic horoscope based on birth details
      description: |
        Calculate a complete Vedic astrological chart including ascendant, planetary positions, houses, and dasha periods using the Swiss Ephemeris.
        
        You can provide birth location using either place name (preferred) or explicit coordinates with timezone.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - birth_date
                - birth_time
              properties:
                birth_date:
                  type: string
                  description: Date of birth in YYYY-MM-DD format
                  example: "1990-01-01"
                birth_time:
                  type: string
                  description: Time of birth in HH:MM:SS format (24h)
                  example: "12:30:00"
                place:
                  type: string
                  description: Place of birth (city, country) - preferred method
                  example: "Chennai, India"
                latitude:
                  type: number
                  description: Birth latitude (-90 to 90 degrees) - alternative to place
                  minimum: -90
                  maximum: 90
                  example: 13.0827
                longitude:
                  type: number
                  description: Birth longitude (-180 to 180 degrees) - alternative to place
                  minimum: -180
                  maximum: 180
                  example: 80.2707
                timezone_offset:
                  type: number
                  description: Timezone offset from UTC in hours - alternative to place
                  minimum: -12
                  maximum: 14
                  example: 5.5
                ayanamsa:
                  type: string
                  description: Ayanamsa method to use for calculations
                  enum: [lahiri, raman, krishnamurti]
                  default: lahiri
                  example: "lahiri"
      responses:
        '200':
          description: Successful horoscope calculation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  version:
                    type: string
                    example: "1.0"
                  generated_at:
                    type: string
                    format: date-time
                    example: "2023-07-01T12:34:56.789Z"
                  request_params:
                    type: object
                    example:
                      birth_date: "1990-01-01"
                      birth_time: "12:00:00"
                      place: "Chennai, India"
                      ayanamsa: "lahiri"
                  birth_data:
                    type: object
                    properties:
                      date:
                        type: string
                        example: "1990-01-01"
                      time:
                        type: string
                        example: "12:00:00"
                      place:
                        type: string
                        example: "Chennai, India"
                      latitude:
                        type: number
                        example: 13.0827
                      longitude:
                        type: number
                        example: 80.2707
                      timezone_offset:
                        type: number
                        example: 5.5
                      ayanamsa:
                        type: string
                        example: "lahiri"
                      julian_day:
                        type: number
                        example: 2447893.0
                      location_derived:
                        type: boolean
                        example: true
                  ascendant:
                    type: object
                    properties:
                      sign:
                        type: string
                        example: "Taurus"
                      sign_id:
                        type: integer
                        example: 2
                      longitude:
                        type: number
                        example: 45.23
                      degrees:
                        type: integer
                        example: 15
                      minutes:
                        type: integer
                        example: 13
                      seconds:
                        type: integer
                        example: 48
                      nakshatra:
                        type: string
                        example: "Rohini"
                      nakshatra_id:
                        type: integer
                        example: 4
                      nakshatra_pada:
                        type: integer
                        example: 2
                  planets:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "Sun"
                        sanskrit_name:
                          type: string
                          example: "Surya"
                        longitude:
                          type: number
                          example: 256.83
                        latitude:
                          type: number
                          example: 0.0
                        sign:
                          type: string
                          example: "Sagittarius"
                        sign_id:
                          type: integer
                          example: 9
                        sign_longitude:
                          type: number
                          example: 16.83
                        house:
                          type: integer
                          example: 8
                        nakshatra:
                          type: string
                          example: "Purva Ashadha"
                        nakshatra_id:
                          type: integer
                          example: 19
                        nakshatra_pada:
                          type: integer
                          example: 3
                        degrees:
                          type: integer
                          example: 16
                        minutes:
                          type: integer
                          example: 49
                        seconds:
                          type: integer
                          example: 48
                        is_retrograde:
                          type: boolean
                          example: false
                        speed:
                          type: number
                          example: 1.02
                        dignity:
                          type: string
                          example: "Neutral"
                  houses:
                    type: array
                    items:
                      type: object
                      properties:
                        house_number:
                          type: integer
                          example: 1
                        sign:
                          type: string
                          example: "Taurus"
                        sign_id:
                          type: integer
                          example: 2
                        longitude:
                          type: number
                          example: 45.23
                        degrees:
                          type: integer
                          example: 15
                        minutes:
                          type: integer
                          example: 13
                        seconds:
                          type: integer
                          example: 48
                  mahadasha:
                    type: array
                    items:
                      type: object
                      properties:
                        planet:
                          type: string
                          example: "Saturn"
                        start_date:
                          type: string
                          example: "1990-01-01"
                        end_date:
                          type: string
                          example: "2009-01-01"
                        years:
                          type: number
                          example: 19
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  version:
                    type: string
                    example: "1.0"
                  generated_at:
                    type: string
                    format: date-time
                    example: "2023-07-01T12:34:56.789Z"
                  request_params:
                    type: object
                    example:
                      birth_date: "1990-01-01"
                      birth_time: "invalid_time"
                      place: "Chennai, India"
                  error_code:
                    type: string
                    example: "INVALID_TIME_FORMAT"
                  error_message:
                    type: string
                    example: "The provided birth time is invalid"
                  error_details:
                    type: object
                    example:
                      parameter: "birth_time"
                      expected_format: "HH:MM:SS"
                      received_value: "invalid_time"
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  error_code:
                    type: string
                    example: "RATE_LIMIT_EXCEEDED"
                  error_message:
                    type: string
                    example: "Rate limit exceeded. Please try again later."
  /v1/api/horoscope/raw:
    post:
      operationId: generateHoroscopeRaw
      summary: Generate a Vedic horoscope from flexible, user-friendly input formats
      description: |
        Calculate a complete Vedic astrological chart with flexible input format support.
        
        This endpoint is designed to be more forgiving with input formats, supporting various date and time formats.
        It's especially useful for Custom GPT integration where users might provide birth information in less structured ways.
        
        You can provide birth location using either place name (preferred) or explicit coordinates with timezone.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - birth_date
                - birth_time
              properties:
                birth_date:
                  type: string
                  description: |
                    Date of birth in various formats:
                    - YYYY-MM-DD (1990-01-01)
                    - DD-MM-YYYY (01-01-1990)
                    - DD MMM YYYY (01 Jan 1990)
                    - MMM DD YYYY (Jan 01 1990)
                  example: "01 Dec 1988"
                birth_time:
                  type: string
                  description: |
                    Time of birth in various formats:
                    - HH:MM:SS (13:30:00)
                    - HH:MM (13:30)
                    - HHMM (1330)
                    - With AM/PM (1:30 PM)
                  example: "2147"
                place:
                  type: string
                  description: Place of birth (city, country) - preferred method
                  example: "Chennai, India"
                latitude:
                  type: number
                  description: Birth latitude (-90 to 90 degrees) - alternative to place
                  minimum: -90
                  maximum: 90
                  example: 13.0827
                longitude:
                  type: number
                  description: Birth longitude (-180 to 180 degrees) - alternative to place
                  minimum: -180
                  maximum: 180
                  example: 80.2707
                timezone_offset:
                  type: number
                  description: Timezone offset from UTC in hours - alternative to place
                  minimum: -12
                  maximum: 14
                  example: 5.5
                ayanamsa:
                  type: string
                  description: Ayanamsa method to use for calculations
                  enum: [lahiri, raman, krishnamurti]
                  default: lahiri
                  example: "lahiri"
            examples:
              standard:
                summary: Standard format
                value: {
                  "birth_date": "1988-12-01",
                  "birth_time": "21:47:00",
                  "place": "Chennai, India",
                  "ayanamsa": "lahiri"
                }
              flexible:
                summary: Flexible format
                value: {
                  "birth_date": "01 Dec 1988",
                  "birth_time": "2147",
                  "place": "Chennai, India",
                  "ayanamsa": "lahiri"
                }
              alternative:
                summary: Alternative property names
                value: {
                  "dateOfBirth": "01 Dec 1988",
                  "timeOfBirth": "9:47 PM",
                  "place": "Chennai, India"
                }
          text/plain:
            schema:
              type: string
              example: '"birth_date": 01 dec 1988, "birth_time": "2147", "place": "Chennai, India", "ayanamsa": "lahiri"'
            
      responses:
        '200':
          description: Successful horoscope calculation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HoroscopeResponse'
        '400':
          description: Invalid input format or missing required data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  version:
                    type: string
                    example: "1.0"
                  generated_at:
                    type: string
                    format: date-time
                    example: "2023-07-01T12:34:56.789Z"
                  error_code:
                    type: string
                    example: "INVALID_INPUT_FORMAT"
                  error_message:
                    type: string
                    example: "Could not parse input: Invalid date format"
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  error_code:
                    type: string
                    example: "RATE_LIMIT_EXCEEDED"
                  error_message:
                    type: string
                    example: "Rate limit exceeded. Please try again later." 