[metadata]
description-file = README.md
license_files = LICENSE

[pycodestyle]
max-line-length = 88
exclude = .git,__pycache__,build,dist

[flake8]
max-line-length = 88
exclude = .git,__pycache__,build,dist
per-file-ignores =
    # Allow imports at module level
    __init__.py: F401
    # Allow star imports in __init__.py
    __init__.py: F403
    # Allow non-abstract empty methods
    */tests/*: B006
max-complexity = 10

[isort]
line_length = 88
include_trailing_comma = true
multi_line_output = 3
use_parentheses = true
ensure_newline_before_comments = true

[mypy]
python_version = 3.8
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[coverage:run]
source = api
branch = true
omit = 
    */__pycache__/*
    */tests/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    raise NotImplemented
    @abc.abstractmethod
    @abstractmethod
    raise Exception
    raise ValueError
    raise TypeError
    raise RuntimeError
    raise AttributeError
    raise KeyError
    raise IndexError
    raise Warning
    @pytest.fixture
    @pytest.mark.skip
    @pytest.mark.skipif
    @pytest.mark.xfail
    @pytest.mark.parametrize
    @pytest.mark.timeout
    @pytest.mark.asyncio
    @pytest.mark.filterwarnings
    @pytest.mark.usefixtures
    @pytest.mark.tryfirst
    @pytest.mark.trylast
