openapi: 3.1.0
info:
  title: JAI - Jyotish Astrological Interpretation API
  description: API for Vedic astrological calculations based on the Swiss Ephemeris, providing ascendants, natal charts, divisional charts, mahadasha periods, nakshatra positions, planetary aspects, and yogas.
  version: 1.0.0
servers:
  - url: https://jai-api.onrender.com
    description: Render deployment
paths:
  /:
    get:
      operationId: getRoot
      summary: Get welcome message
      responses:
        "200":
          description: Welcome message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Welcome to JAI API - Jyotish Astrological Interpretation"
                  documentation:
                    type: string
                    example: "/v1/docs"
                  status:
                    type: string
                    example: "online"
  /v1/api/health:
    get:
      operationId: getHealth
      summary: Health check endpoint
      tags:
        - Health
      responses:
        "200":
          description: Health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  version:
                    type: string
                    example: "1.0.0"
                  environment:
                    type: string
                    example: "production"
  /v1/api/ascendant:
    post:
      operationId: calculateAscendant
      summary: Calculate ascendant based on birth data
      tags:
        - Example
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BirthDataRequest'
      responses:
        "200":
          description: Ascendant calculation result
          content:
            application/json:
              schema:
                type: object
                properties:
                  ascendant_degree:
                    type: number
                    example: 123.456
                  ascendant_sign:
                    type: integer
                    example: 5
                  ascendant_sign_name:
                    type: string
                    example: "Leo"
                  birth_data:
                    type: object
                    properties:
                      date:
                        type: string
                        format: date
                        example: "1990-01-15"
                      time:
                        type: string
                        example: "14:30:00"
                      latitude:
                        type: number
                        example: 28.6139
                      longitude:
                        type: number
                        example: 77.2090
  /v1/api/horoscope:
    post:
      operationId: getHoroscope
      summary: Generate a Vedic horoscope based on birth data
      tags:
        - Horoscope
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BirthDataRequest'
      responses:
        "200":
          description: Complete horoscope information
          content:
            application/json:
              schema:
                type: object
                properties:
                  birth_data:
                    type: object
                    properties:
                      date:
                        type: string
                        format: date
                        example: "1990-01-15"
                      time:
                        type: string
                        example: "14:30:00"
                      latitude:
                        type: number
                        example: 28.6139
                      longitude:
                        type: number
                        example: 77.2090
                      timezone_offset:
                        type: number
                        example: 5.5
                      ayanamsa:
                        type: string
                        example: "lahiri"
                  ascendant:
                    type: object
                    properties:
                      ascendant_degree:
                        type: number
                        example: 45.67
                      ascendant_sign:
                        type: integer
                        example: 2
                      ascendant_sign_name:
                        type: string
                        example: "Taurus"
                  planets:
                    type: array
                    items:
                      type: object
                      properties:
                        planet:
                          type: string
                          example: "Sun"
                        longitude:
                          type: number
                          example: 105.23
                        sign_index:
                          type: integer
                          example: 4
                        sign_name:
                          type: string
                          example: "Leo"
                        house:
                          type: integer
                          example: 5
                        is_retrograde:
                          type: boolean
                          example: false
                  mahadasha:
                    type: array
                    items:
                      type: object
                      properties:
                        planet:
                          type: string
                          example: "Saturn"
                        start_date:
                          type: string
                          format: date
                          example: "1990-01-15"
                        end_date:
                          type: string
                          format: date
                          example: "2009-01-14"
                        years:
                          type: integer
                          example: 19
                  generated_at:
                    type: string
                    format: date-time
                    example: "2025-05-06T18:30:00.000Z"
  /v1/api/natal_chart:
    post:
      operationId: generateNatalChart
      summary: Generate a complete natal chart with planet positions
      tags:
        - Charts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BirthDataRequest'
      responses:
        "200":
          description: Natal chart result
          content:
            application/json:
              schema:
                type: object
                properties:
                  ascendant:
                    $ref: '#/components/schemas/AscendantInfo'
                  planets:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlanetPosition'
  /v1/api/divisional_chart:
    post:
      operationId: calculateDivisionalChart
      summary: Calculate divisional charts (D1-D12)
      tags:
        - Charts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - birth_date
                - birth_time
                - latitude
                - longitude
                - timezone_offset
              properties:
                birth_date:
                  type: string
                  format: date
                  description: Date of birth in YYYY-MM-DD format
                  example: "1990-01-15"
                birth_time:
                  type: string
                  description: Time of birth in HH:MM:SS format (24h)
                  example: "14:30:00"
                latitude:
                  type: number
                  description: Birth latitude (-90 to +90)
                  example: 28.6139
                longitude:
                  type: number
                  description: Birth longitude (-180 to +180)
                  example: 77.2090
                timezone_offset:
                  type: number
                  description: Time zone offset from UTC in hours
                  example: 5.5
                ayanamsa:
                  type: string
                  description: Ayanamsa method
                  enum: [lahiri, raman, krishnamurti]
                  default: lahiri
                charts:
                  type: array
                  description: List of divisional charts to calculate
                  items:
                    type: string
                    enum: ["D1", "D2", "D3", "D4", "D7", "D9", "D10", "D12"]
                  example: ["D1", "D9"]
      responses:
        "200":
          description: Divisional chart result
          content:
            application/json:
              schema:
                type: object
                properties:
                  ascendant:
                    $ref: '#/components/schemas/AscendantInfo'
                  divisional_charts:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        $ref: '#/components/schemas/DivisionalPlanetPosition'
  /v1/api/mahadasha:
    post:
      operationId: calculateMahadasha
      summary: Calculate Vimshottari Mahadasha periods
      tags:
        - Dashas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - birth_date
                - birth_time
                - latitude
                - longitude
                - timezone_offset
              properties:
                birth_date:
                  type: string
                  format: date
                  description: Date of birth in YYYY-MM-DD format
                  example: "1990-01-15"
                birth_time:
                  type: string
                  description: Time of birth in HH:MM:SS format (24h)
                  example: "14:30:00"
                latitude:
                  type: number
                  description: Birth latitude (-90 to +90)
                  example: 28.6139
                longitude:
                  type: number
                  description: Birth longitude (-180 to +180)
                  example: 77.2090
                timezone_offset:
                  type: number
                  description: Time zone offset from UTC in hours
                  example: 5.5
                ayanamsa:
                  type: string
                  description: Ayanamsa method
                  enum: [lahiri, raman, krishnamurti]
                  default: lahiri
                levels:
                  type: string
                  description: Comma-separated list of dasha levels to calculate
                  example: "mahadasha,antardasha,pratyantardasha"
      responses:
        "200":
          description: Mahadasha result
          content:
            application/json:
              schema:
                type: object
                properties:
                  moon:
                    type: object
                    properties:
                      longitude:
                        type: number
                      nakshatra_index:
                        type: integer
                      nakshatra_name:
                        type: string
                      nakshatra_lord:
                        type: string
                  vimshottari_mahadasha:
                    type: array
                    items:
                      $ref: '#/components/schemas/MahadashaPeriod'
components:
  schemas:
    BirthDataRequest:
      type: object
      required:
        - birth_date
        - birth_time
        - latitude
        - longitude
        - timezone_offset
      properties:
        birth_date:
          type: string
          format: date
          description: Date of birth in YYYY-MM-DD format
          example: "1990-01-15"
        birth_time:
          type: string
          description: Time of birth in HH:MM:SS format (24h)
          example: "14:30:00"
        latitude:
          type: number
          description: Birth latitude (-90 to +90)
          example: 28.6139
        longitude:
          type: number
          description: Birth longitude (-180 to +180)
          example: 77.2090
        timezone_offset:
          type: number
          description: Time zone offset from UTC in hours
          example: 5.5
        ayanamsa:
          type: string
          description: Ayanamsa method
          enum: [lahiri, raman, krishnamurti]
          default: lahiri
    AscendantInfo:
      type: object
      properties:
        ascendant_degree:
          type: number
          example: 45.67
        ascendant_sign:
          type: integer
          example: 2
        ascendant_sign_name:
          type: string
          example: "Taurus"
    PlanetPosition:
      type: object
      properties:
        planet:
          type: string
          example: "Sun"
        longitude:
          type: number
          example: 105.23
        sign_index:
          type: integer
          example: 4
        sign_name:
          type: string
          example: "Leo"
        house:
          type: integer
          example: 5
        is_retrograde:
          type: boolean
          example: false
    DivisionalPlanetPosition:
      type: object
      properties:
        planet:
          type: string
          example: "Sun"
        divisional_sign_index:
          type: integer
          example: 4
        divisional_sign_name:
          type: string
          example: "Leo"
        divisional_house:
          type: integer
          example: 5
        is_retrograde:
          type: boolean
          example: false
    MahadashaPeriod:
      type: object
      properties:
        planet:
          type: string
          example: "Saturn"
        start_date:
          type: string
          format: date
          example: "1990-01-15"
        end_date:
          type: string
          format: date
          example: "2009-01-14"
        years:
          type: number
          example: 19
        antardashas:
          type: array
          items:
            type: object
            properties:
              planet:
                type: string
                example: "Saturn"
              start_date:
                type: string
                format: date
                example: "1990-01-15"
              end_date:
                type: string
                format: date
                example: "1993-01-20"
              months:
                type: number
                example: 36.1
              pratyantardashas:
                type: array
                items:
                  type: object
                  properties:
                    planet:
                      type: string
                      example: "Saturn"
                    start_date:
                      type: string
                      format: date
                      example: "1990-01-15"
                    end_date:
                      type: string
                      format: date
                      example: "1990-07-14"
                    days:
                      type: integer
                      example: 180
